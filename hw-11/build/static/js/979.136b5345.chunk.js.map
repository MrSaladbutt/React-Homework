{"version":3,"file":"static/js/979.136b5345.chunk.js","mappings":"oIACA,SAAgB,MAAQ,qBAAqB,MAAQ,qBAAqB,KAAO,oBAAoB,MAAQ,qBAAqB,OAAS,sBAAsB,UAAY,0B,sBCG7K,MAgEA,EAhEkBA,IAAkD,IAAjD,KAAEC,EAAI,mBAAEC,EAAkB,KAAEC,EAAI,QAAEC,GAASJ,EAC5D,MAAOK,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,IAC7BC,GAAWC,EAAAA,EAAAA,MAejB,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAMA,MAAMC,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAMG,MAAMF,SAAC,WAC5BH,EAAAA,EAAAA,MAAA,QAAMM,SAhBUC,IAClBA,EAAEC,iBACejB,EAAKkB,MACpBC,GAAOA,EAAIC,WAAalB,EAAKkB,UAAYD,EAAIE,QAAUnB,EAAKmB,SAG5DpB,GAAmB,GACnBM,EAAS,aAAc,CAAEe,SAAS,KAElCjB,EAAS,+BACX,EAM+BK,UAAWC,EAAMY,KAAKX,SAAA,EACjDH,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAMa,UAAUZ,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,SAAOH,UAAWC,EAAMc,MAAOC,QAAQ,WAAUd,SAAC,cAGlDC,EAAAA,EAAAA,KAAA,SACEc,MAAOzB,EAAKkB,SACZQ,SAAUZ,GACRb,EAAQ,CACNiB,SAAUJ,EAAEa,OAAOF,MACnBN,MAAOnB,EAAKmB,QAGhBS,GAAG,WACHpB,UAAWC,EAAMoB,MACjBC,KAAK,aAGTvB,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAMa,UAAUZ,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,SAAOH,UAAWC,EAAMc,MAAOC,QAAQ,QAAOd,SAAC,WAG/CC,EAAAA,EAAAA,KAAA,SACEc,MAAOzB,EAAKmB,MACZO,SAAUZ,GACRb,EAAQ,CACNiB,SAAUlB,EAAKkB,SACfC,MAAOL,EAAEa,OAAOF,QAGpBG,GAAG,QACHpB,UAAWC,EAAMoB,MACjBC,KAAK,cAGTnB,EAAAA,EAAAA,KAAA,UAAQmB,KAAK,SAAStB,UAAWC,EAAMsB,OAAOrB,SAAC,UAG9CR,IAASS,EAAAA,EAAAA,KAAA,KAAGqB,MAAO,CAAEC,MAAO,OAAQvB,SAAER,SAErC,C","sources":["webpack://hw-2/./src/pages/LoginPage/login.module.css?7ea1","pages/LoginPage/LoginPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"login\":\"login_login__kjWMY\",\"title\":\"login_title__PwGQl\",\"form\":\"login_form__XZaWk\",\"input\":\"login_input__mpKUo\",\"button\":\"login_button__ZRGma\",\"formfield\":\"login_formfield__RVZrn\"};","import { useState } from 'react';\r\nimport login from './login.module.css';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst LoginPage = ({ data, setIsAuthenticated, user, setUser }) => {\r\n  const [error, setError] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = e => {\r\n    e.preventDefault();\r\n    const userData = data.find(\r\n      obj => obj.username === user.username && obj.email === user.email,\r\n    );\r\n    if (userData) {\r\n      setIsAuthenticated(true);\r\n      navigate('/todo-list', { replace: true });\r\n    } else {\r\n      setError('Invalid username or password');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={login.login}>\r\n      <h2 className={login.title}>Login</h2>\r\n      <form onSubmit={handleLogin} className={login.form}>\r\n        <div className={login.formfield}>\r\n          <label className={login.label} htmlFor=\"username\">\r\n            Username\r\n          </label>\r\n          <input\r\n            value={user.username}\r\n            onChange={e =>\r\n              setUser({\r\n                username: e.target.value,\r\n                email: user.email,\r\n              })\r\n            }\r\n            id=\"username\"\r\n            className={login.input}\r\n            type=\"text\"\r\n          />\r\n        </div>\r\n        <div className={login.formfield}>\r\n          <label className={login.label} htmlFor=\"email\">\r\n            Email\r\n          </label>\r\n          <input\r\n            value={user.email}\r\n            onChange={e =>\r\n              setUser({\r\n                username: user.username,\r\n                email: e.target.value,\r\n              })\r\n            }\r\n            id=\"email\"\r\n            className={login.input}\r\n            type=\"email\"\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className={login.button}>\r\n          Login\r\n        </button>\r\n        {error && <p style={{ color: 'red' }}>{error}</p>}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"names":["_ref","data","setIsAuthenticated","user","setUser","error","setError","useState","navigate","useNavigate","_jsxs","className","login","children","_jsx","title","onSubmit","e","preventDefault","find","obj","username","email","replace","form","formfield","label","htmlFor","value","onChange","target","id","input","type","button","style","color"],"sourceRoot":""}